{"version":3,"sources":["components/image-item/image-item.component.js","pages/search/search.page.js","pages/collection/collection.page.js","App.js","serviceWorker.js","index.js"],"names":["ImageItem","_ref","imgUrl","center","date_created","title","description","isFav","add","edit","remove","favorite","react_default","a","createElement","className","style","backgroundImage","substr","onClick","index_es","icon","faPlus","size","faHeart","faEdit","faTrash","SearchPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchTimeout","search","e","context","target","value","clearTimeout","setState","isSearching","setTimeout","searchTerm","fetch","concat","encodeURIComponent","state","then","res","json","data","searchResult","collection","items","_this2","_this$state","react_router_dom","to","id","placeholder","onChange","map","index","_value$data$","links","href","image_item_component","key","props","addItem","React","Component","CollectionPage","removeItem","favItem","console","log","App","addItemIntoCollection","itemModification","objectSpread","toConsumableArray","list","saveToStorage","splice","localStorage","setItem","JSON","stringify","storedCollection","getItem","parse","react_router","path","render","search_page","assign","exact","collection_page","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a1bc0a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './image-item.styles.scss';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faHeart, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nconst ImageItem = ( {imgUrl, center, date_created, title, description, isFav, add, edit, remove, favorite} ) => {\r\n    return (\r\n        <li className=\"image-item\">\r\n            <div className=\"image-thumbnail\">\r\n                <div className=\"main-image\">\r\n                    <div className=\"image-holder\"\r\n                         style={{backgroundImage: 'url(\"' + imgUrl + '\")'}}/>\r\n                </div>\r\n                <div className=\"image-shadow\"/>\r\n            </div>\r\n\r\n            <div className=\"image-context\">\r\n                <div className=\"row space-between\">\r\n                    <p className=\"author\">{ center }</p>\r\n                    <p className=\"date-created\">{ date_created ? date_created.substr(0,10): null}</p>\r\n                </div>\r\n\r\n                <div className=\"context-detail\">\r\n                    <h3 className=\"title\">{ title }</h3>\r\n                    <p className=\"description\">{ description }</p>\r\n                </div>\r\n\r\n                <ul className=\"row image-cta\">\r\n                    { add ? <li>\r\n                        <button className=\"cta\" onClick={ add }>\r\n                            <FontAwesomeIcon icon={faPlus} className=\"inactive\" size=\"lg\"/>\r\n                        </button>\r\n                    </li>: null }\r\n                    { favorite ? <li>\r\n                        <button className=\"cta\" onClick={ favorite }>\r\n                            <FontAwesomeIcon icon={faHeart} className={isFav ? 'active-heart': 'inactive'} size=\"lg\"/>\r\n                        </button>\r\n                    </li>: null }\r\n                    { edit ? <li>\r\n                        <button className=\"cta\" onClick={ edit }>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"inactive\" size=\"lg\"/>\r\n                        </button>\r\n                    </li>: null }\r\n                    { remove ? <li>\r\n                        <button className=\"cta\" onClick={ remove }>\r\n                            <FontAwesomeIcon icon={faTrash} className=\"inactive\" size=\"lg\"/>\r\n                        </button>\r\n                    </li>: null }\r\n                </ul>\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default ImageItem;","// Modules\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Components\r\nimport ImageItem from \"../../components/image-item/image-item.component\";\r\n\r\n// Stylesheet\r\nimport './search.styles.scss';\r\n\r\n\r\n// Temporary use dummy data for layout purpose\r\nclass SearchPage extends React.Component{\r\n    searchTimeout = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchTerm: '',\r\n            searchResult: [],\r\n            isSearching: false\r\n        }\r\n    }\r\n\r\n    search = (e) => {\r\n        let context = e.target.value;\r\n        clearTimeout(this.searchTimeout);\r\n\r\n        // show processing placeholder\r\n        this.setState({isSearching: true});\r\n\r\n        // set search timeout\r\n        this.searchTimeout = setTimeout(() => {\r\n\r\n            // Update search term after every 300ms\r\n            this.setState({searchTerm: context}, () => {\r\n\r\n                // Search using the new search term\r\n                fetch(`https://images-api.nasa.gov/search?q=${encodeURIComponent(this.state.searchTerm)}`)\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n\r\n                        // Update data & reset isSearching flag\r\n                        this.setState({searchResult: data.collection ? data.collection.items: [], isSearching: false});\r\n\r\n                    });\r\n\r\n            });\r\n\r\n        },300);\r\n    }\r\n\r\n    render() {\r\n        let { searchResult, isSearching } = this.state;\r\n        return (\r\n            <div className=\"searchPage\">\r\n\r\n                {/* Page Header */}\r\n                <div className=\"section section-page-header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row space-between page-navigation\">\r\n                            <Link to=\"/\" className=\"nav-item back\">Back to Collection</Link>\r\n                        </div>\r\n                        <h2 className=\"page-title style-2\">\r\n                            Search From Nasa\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Search Form */}\r\n                <div className=\"section section-search-form\">\r\n                    <div className=\"container\">\r\n                        <input className=\"custom-input input-block input-large\"\r\n                               id=\"searchForm\"\r\n                               placeholder=\"Type something to search...\"\r\n                               onChange={ this.search }/>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Result */}\r\n                <div className=\"section section-search-result\">\r\n                    <div className=\"container\">\r\n                        { isSearching ? <div className=\"spinner\">Searching...</div>:\r\n                            <ul className=\"row align-top image-list\">\r\n                                { searchResult.map( (value, index) => {\r\n                                    let { date_created, title, center, description } = value.data[0];\r\n                                    let imgUrl = value.links ? value.links[0].href:'';\r\n\r\n                                    return (\r\n                                        <ImageItem key={'nasa-collection-item' + index}\r\n                                                   date_created={ date_created }\r\n                                                   title={ title }\r\n                                                   center={ center }\r\n                                                   description={ description }\r\n                                                   imgUrl={ imgUrl }\r\n                                                   add={() => this.props.addItem(value)}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </ul>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPage;","// Modules\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport ImageItem from \"../../components/image-item/image-item.component\";\r\n\r\n// Temporary use dummy data for layout purpose\r\nconst CollectionPage = ({collection, removeItem, favItem}) => {\r\n    return (\r\n        <div className='searchPage'>\r\n\r\n            {/* Page Header */}\r\n            <div className=\"section section-page-header\">\r\n\r\n                {/* Container Wrapper */}\r\n                <div className=\"container\">\r\n                    <div className=\"row space-between\">\r\n                        <h3 className=\"page-title\">\r\n                            NASA Collections\r\n                        </h3>\r\n                        <Link to=\"/search\" className=\"cta add-item\">\r\n                            Add New Item\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Image List */}\r\n            <div className=\"section section-image-list\">\r\n\r\n                {/* Container Wrapper */}\r\n                <div className=\"container\">\r\n                    <ul className=\"row align-top image-list\">\r\n                        { collection.map( (value, index) => {\r\n                            console.log(value);\r\n\r\n                            let { date_created, title, center, description } = value.data[0];\r\n                            let imgUrl = value.links[0].href;\r\n                            let { favorite } = value;\r\n\r\n                            return (\r\n                                <ImageItem key={'nasa-collection-item' + index}\r\n                                           date_created={ date_created }\r\n                                           title={ title }\r\n                                           center={ center }\r\n                                           description={ description }\r\n                                           imgUrl={ imgUrl }\r\n                                           isFav = { favorite }\r\n                                           favorite={() => { favItem(index) }}\r\n                                           remove={()=>{ removeItem(index) }}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollectionPage;","// Modules\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n// Stylesheet\r\nimport './App.scss';\r\n\r\n// Pages\r\nimport SearchPage from './pages/search/search.page';\r\nimport CollectionPage from './pages/collection/collection.page';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            list: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let storedCollection = localStorage.getItem('nasaCollection');\r\n        if(storedCollection) {\r\n            this.setState(JSON.parse(storedCollection));\r\n        }\r\n    }\r\n\r\n    addItemIntoCollection = (data) => {\r\n        // Add favorite attribute into the item in the collection\r\n        let itemModification = {...data, favorite: false};\r\n\r\n        // Avoid directly mutate the state\r\n        let collection = [...this.state.list];\r\n        collection = collection.concat(itemModification);\r\n\r\n        this.setState({ list: collection }, () => {\r\n            this.saveToStorage();\r\n        });\r\n    }\r\n\r\n    removeItem = (index) => {\r\n        if(index !== -1){\r\n            // Avoid directly mutate the state\r\n            let collection = [...this.state.list];\r\n            collection.splice(index, 1);\r\n\r\n            this.setState({list: collection}, () => {\r\n                this.saveToStorage();\r\n            })\r\n        }\r\n    }\r\n\r\n    favItem = (index) => {\r\n        if(index !== -1){\r\n            let collection = [...this.state.list];\r\n            collection[index].favorite = !collection[index].favorite;\r\n\r\n            this.setState({list: collection}, () => {\r\n                this.saveToStorage();\r\n            })\r\n        }\r\n    }\r\n\r\n    saveToStorage = () => {\r\n        localStorage.setItem('nasaCollection', JSON.stringify(this.state));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                {/* Page Routing */}\r\n                <Route path={'/search'}\r\n                       render={(props) => <SearchPage {...props}\r\n                                                      addItem={this.addItemIntoCollection}/>} />\r\n                <Route path={'/'} exact\r\n                       render={(props) => <CollectionPage {...props}\r\n                                                          collection={this.state.list}\r\n                                                          removeItem={this.removeItem}\r\n                                                          favItem={this.favItem}\r\n                       />}\r\n                />\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}